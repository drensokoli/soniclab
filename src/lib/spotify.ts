import axios from 'axios';

interface PlaylistResponse {
    id: string;
}
export async function createPlaylist(userId: string, accessToken: string, playlistName: string, songIds: string[]): Promise<void> {
    try {
        // Create a new playlist
        const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {
            method: 'POST',
            headers: {
                'Authorization': 'Bearer ' + accessToken,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name: playlistName,
                description: 'Generated by SpotiLab',
                public: false
            })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        const playlistId = data.id;

        // Add tracks to the playlist
        const addTracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {
            method: 'POST',
            headers: {
                'Authorization': 'Bearer ' + accessToken,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                uris: songIds.map(id => `spotify:track:${id}`)
            })
        });

        if (!addTracksResponse.ok) {
            throw new Error(`HTTP error! status: ${addTracksResponse.status}`);
        }
    } catch (error) {
        console.error(error);
    }
}
